;------------------------------------------------------------------------------
; This file was auto-generated by PICStateGenerator. Do not edit.
; Generated: Mon Oct 31 21:07:09 GMT 2011
;------------------------------------------------------------------------------
              list     p=18F14K50
#include "p18f14k50.inc"

              GLOBAL   gpsInit
              GLOBAL   gpsStep
              GLOBAL   gpsLatitudeDegMin
              GLOBAL   gpsFlags
              GLOBAL   gpsLongitudeHundredths
              GLOBAL   gpsTime
              GLOBAL   gpsLongitudeDegMin
              GLOBAL   gpsQuality
              GLOBAL   gpsLatitudeHundredths
              GLOBAL   gpsInput

gpsAcs        UDATA_ACS
_statePtr              res .2
_subReturn             res .2
gpsFlags               res .1
gps_storeCount         res .1
gpsInput               res .1

              ; Please set up the linker to locate this block as required.
gpsBank1      UDATA
gpsLatitudeDegMin      res .4
gpsLongitudeHundredths   res .2
gpsTime                res .6
gpsLongitudeDegMin     res .5
gpsQuality             res .1
gpsLatitudeHundredths   res .2

gpsCode       CODE

;------------------------------------------------------------------------------
; State model initialisation.
;------------------------------------------------------------------------------
gpsInit:      MOVLW    HIGH(step_root)
              MOVWF    (_statePtr + .1), A
              MOVLW    LOW(step_root)
              MOVWF    _statePtr, A
              RETURN   

;------------------------------------------------------------------------------
; State model entry point.
; This method executes the code for the current state.
;------------------------------------------------------------------------------
gpsStep:      CLRF     PCLATU, A
              MOVFF    (_statePtr + .1), PCLATH
              MOVF     _statePtr, W, A
              MOVWF    PCL, A

;------------------------------------------------------------------------------
; Node root entry code.
;------------------------------------------------------------------------------
              ;  Transition GOTO root
enter_root:   MOVLW    HIGH(step_root)
              MOVWF    (_statePtr + .1), A
              MOVLW    LOW(step_root)
              MOVWF    _statePtr, A
              RETURN   

;------------------------------------------------------------------------------
; Node root step code.
;------------------------------------------------------------------------------
                ; -- Start of transition --
                ;  Precondition gpsInput == '$'
step_root:      MOVLW    .36
                CPFSEQ   gpsInput, A
                GOTO     lbl_0
                ;  Transition GOTO (Shared) dollar
                GOTO     enter_dollar
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_0:          GOTO     enter_root

;------------------------------------------------------------------------------
; Node dollar entry code.
;------------------------------------------------------------------------------
lbl_1:
              ;  Transition GOTO dollar
enter_dollar: MOVLW    HIGH(step_dollar)
              MOVWF    (_statePtr + .1), A
              MOVLW    LOW(step_dollar)
              MOVWF    _statePtr, A
              RETURN   

;------------------------------------------------------------------------------
; Node dollar step code.
;------------------------------------------------------------------------------
                ; -- Start of transition --
                ;  Precondition gpsInput == 'G'
step_dollar:    MOVLW    .71
                CPFSEQ   gpsInput, A
                GOTO     lbl_2
                ;  Transition GOTO gps_State_0014
                MOVLW    HIGH(step_gps_State_0014)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0014)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_2:          GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0014 step code.
;------------------------------------------------------------------------------
lbl_3:
                ; -- Start of transition --
                ;  Precondition gpsInput == 'P'
step_gps_State_0014: MOVLW    .80
                CPFSEQ   gpsInput, A
                GOTO     lbl_4
                ;  Transition GOTO gps_State_0015
                MOVLW    HIGH(step_gps_State_0015)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0015)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_4:          GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0015 step code.
;------------------------------------------------------------------------------
lbl_5:
                ; -- Start of transition --
                ;  Precondition gpsInput == 'G'
step_gps_State_0015: MOVLW    .71
                CPFSEQ   gpsInput, A
                GOTO     lbl_6
                ;  Transition GOTO gps_State_0016
                MOVLW    HIGH(step_gps_State_0016)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0016)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_6:          GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0016 step code.
;------------------------------------------------------------------------------
lbl_7:
                ; -- Start of transition --
                ;  Precondition gpsInput == 'G'
step_gps_State_0016: MOVLW    .71
                CPFSEQ   gpsInput, A
                GOTO     lbl_8
                ;  Transition GOTO gps_State_0017
                MOVLW    HIGH(step_gps_State_0017)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0017)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_8:          GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0017 step code.
;------------------------------------------------------------------------------
lbl_9:
                ; -- Start of transition --
                ;  Precondition gpsInput == 'A'
step_gps_State_0017: MOVLW    .65
                CPFSEQ   gpsInput, A
                GOTO     lbl_10
                ;  Precondition Flag gpsFlags:0 == false
                BTFSC    gpsFlags, 0, A
                GOTO     lbl_10
                ;  Transition GOTO gps_State_0018
                MOVLW    HIGH(step_gps_State_0018)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0018)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_10:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0018 step code.
;------------------------------------------------------------------------------
lbl_11:
                ; -- Start of transition --
                ;  Precondition gpsInput == ','
step_gps_State_0018: MOVLW    .44
                CPFSEQ   gpsInput, A
                GOTO     lbl_12
                  ;  Prepare for Gosub. Subroutine will return to lbl_13
                  MOVLW    HIGH(lbl_13)
                  MOVWF    (_subReturn + .1), A
                  MOVLW    LOW(lbl_13)
                  MOVWF    _subReturn, A
                  ;  Command gps_storeCount := 0
                  CLRF     gps_storeCount, A
                  ;  Command gpsTime := 0
                  BANKSEL  gpsTime
                  CLRF     gpsTime
                  CLRF     (gpsTime + .1)
                  CLRF     (gpsTime + .2)
                  CLRF     (gpsTime + .3)
                  CLRF     (gpsTime + .4)
                  CLRF     (gpsTime + .5)
                  ;  Transition GOTO readGpsTime
                  MOVLW    HIGH(step_readGpsTime)
                  MOVWF    (_statePtr + .1), A
                  MOVLW    LOW(step_readGpsTime)
                  MOVWF    _statePtr, A
                  RETURN   
                  ;  Prepare for Gosub. Subroutine will return to lbl_14
lbl_13:           MOVLW    HIGH(lbl_14)
                  MOVWF    (_subReturn + .1), A
                  MOVLW    LOW(lbl_14)
                  MOVWF    _subReturn, A
                  ;  Command gps_storeCount := 0
                  CLRF     gps_storeCount, A
                  ;  Command gpsLatitudeDegMin := 0
                  CLRF     gpsLatitudeDegMin
                  CLRF     (gpsLatitudeDegMin + .1)
                  CLRF     (gpsLatitudeDegMin + .2)
                  CLRF     (gpsLatitudeDegMin + .3)
                  ;  Transition GOTO readLatLong
                  MOVLW    HIGH(step_readLatLong)
                  MOVWF    (_statePtr + .1), A
                  MOVLW    LOW(step_readLatLong)
                  MOVWF    _statePtr, A
                  RETURN   
                ;  Transition GOTO gps_State_0019
lbl_14:         MOVLW    HIGH(step_gps_State_0019)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0019)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_12:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0019 step code.
;------------------------------------------------------------------------------
lbl_15:
                ; -- Start of transition --
                ;  Command gpsQuality := gpsInput
step_gps_State_0019: MOVFF    gpsInput, gpsQuality
                ;  Command gpsFlags:0 := true
                BSF      gpsFlags, 0, A
                ;  Transition GOTO (Shared) root
                GOTO     enter_root

;------------------------------------------------------------------------------
; Node readLatLong step code.
;------------------------------------------------------------------------------
lbl_16:
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
step_readLatLong: MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_17
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_17
                ;  Precondition gps_storeCount <= 0x02
                MOVLW    .3
                CPFSLT   gps_storeCount, A
                GOTO     lbl_17
                ;  Command gpsLatitudeDegMin[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsLatitudeDegMin
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO SELF
                RETURN   
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
lbl_17:         MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_18
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_18
                ;  Precondition gps_storeCount == 0x03
                MOVLW    .3
                CPFSEQ   gps_storeCount, A
                GOTO     lbl_18
                ;  Command gpsLatitudeDegMin[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsLatitudeDegMin
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO gps_State_0002
                MOVLW    HIGH(step_gps_State_0002)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0002)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_18:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0002 step code.
;------------------------------------------------------------------------------
lbl_19:
                ; -- Start of transition --
                ;  Precondition gpsInput == '.'
step_gps_State_0002: MOVLW    .46
                CPFSEQ   gpsInput, A
                GOTO     lbl_20
                ;  Command gps_storeCount := 0
                CLRF     gps_storeCount, A
                ;  Command gpsLatitudeHundredths := 0
                BANKSEL  gpsLatitudeHundredths
                CLRF     gpsLatitudeHundredths
                CLRF     (gpsLatitudeHundredths + .1)
                ;  Transition GOTO gps_State_0003
                MOVLW    HIGH(step_gps_State_0003)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0003)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_20:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0003 step code.
;------------------------------------------------------------------------------
lbl_21:
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
step_gps_State_0003: MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_22
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_22
                ;  Precondition gps_storeCount <= 0x00
                MOVLW    .1
                CPFSLT   gps_storeCount, A
                GOTO     lbl_22
                ;  Command gpsLatitudeHundredths[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsLatitudeHundredths
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO SELF
                RETURN   
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
lbl_22:         MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_23
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_23
                ;  Precondition gps_storeCount == 0x01
                MOVLW    .1
                CPFSEQ   gps_storeCount, A
                GOTO     lbl_23
                ;  Command gpsLatitudeHundredths[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsLatitudeHundredths
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO gps_State_0004
                MOVLW    HIGH(step_gps_State_0004)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0004)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_23:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0004 step code.
;------------------------------------------------------------------------------
lbl_24:
                ; -- Start of transition --
                ;  Precondition gpsInput == '$'
step_gps_State_0004: MOVLW    .36
                CPFSEQ   gpsInput, A
                GOTO     lbl_25
                ;  Transition GOTO (Shared) dollar
                GOTO     enter_dollar
                ; -- Start of transition --
                ;  Precondition gpsInput == ','
lbl_25:         MOVLW    .44
                CPFSEQ   gpsInput, A
                GOTO     lbl_26
                ;  Transition GOTO gps_State_0005
                MOVLW    HIGH(step_gps_State_0005)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0005)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO SELF
lbl_26:         RETURN   

;------------------------------------------------------------------------------
; Node gps_State_0005 step code.
;------------------------------------------------------------------------------
lbl_27:
                ; -- Start of transition --
                ;  Precondition gpsInput == 'S'
step_gps_State_0005: MOVLW    .83
                CPFSEQ   gpsInput, A
                GOTO     lbl_28
                ;  Command gpsFlags:1 := false
                BCF      gpsFlags, 1, A
                ;  Transition GOTO gps_State_0006
                MOVLW    HIGH(step_gps_State_0006)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0006)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Precondition gpsInput == 'N'
lbl_28:         MOVLW    .78
                CPFSEQ   gpsInput, A
                GOTO     lbl_29
                ;  Command gpsFlags:1 := true
                BSF      gpsFlags, 1, A
                ;  Transition GOTO gps_State_0006
                MOVLW    HIGH(step_gps_State_0006)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0006)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_29:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0006 step code.
;------------------------------------------------------------------------------
lbl_30:
                ; -- Start of transition --
                ;  Precondition gpsInput == ','
step_gps_State_0006: MOVLW    .44
                CPFSEQ   gpsInput, A
                GOTO     lbl_31
                ;  Command gps_storeCount := 0
                CLRF     gps_storeCount, A
                ;  Command gpsLongitudeDegMin := 0
                BANKSEL  gpsLongitudeDegMin
                CLRF     gpsLongitudeDegMin
                CLRF     (gpsLongitudeDegMin + .1)
                CLRF     (gpsLongitudeDegMin + .2)
                CLRF     (gpsLongitudeDegMin + .3)
                CLRF     (gpsLongitudeDegMin + .4)
                ;  Transition GOTO gps_State_0007
                MOVLW    HIGH(step_gps_State_0007)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0007)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_31:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0007 step code.
;------------------------------------------------------------------------------
lbl_32:
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
step_gps_State_0007: MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_33
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_33
                ;  Precondition gps_storeCount <= 0x03
                MOVLW    .4
                CPFSLT   gps_storeCount, A
                GOTO     lbl_33
                ;  Command gpsLongitudeDegMin[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsLongitudeDegMin
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO SELF
                RETURN   
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
lbl_33:         MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_34
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_34
                ;  Precondition gps_storeCount == 0x04
                MOVLW    .4
                CPFSEQ   gps_storeCount, A
                GOTO     lbl_34
                ;  Command gpsLongitudeDegMin[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsLongitudeDegMin
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO gps_State_0008
                MOVLW    HIGH(step_gps_State_0008)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0008)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_34:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0008 step code.
;------------------------------------------------------------------------------
lbl_35:
                ; -- Start of transition --
                ;  Precondition gpsInput == '.'
step_gps_State_0008: MOVLW    .46
                CPFSEQ   gpsInput, A
                GOTO     lbl_36
                ;  Command gps_storeCount := 0
                CLRF     gps_storeCount, A
                ;  Command gpsLongitudeHundredths := 0
                BANKSEL  gpsLongitudeHundredths
                CLRF     gpsLongitudeHundredths
                CLRF     (gpsLongitudeHundredths + .1)
                ;  Transition GOTO gps_State_0009
                MOVLW    HIGH(step_gps_State_0009)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0009)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_36:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0009 step code.
;------------------------------------------------------------------------------
lbl_37:
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
step_gps_State_0009: MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_38
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_38
                ;  Precondition gps_storeCount <= 0x00
                MOVLW    .1
                CPFSLT   gps_storeCount, A
                GOTO     lbl_38
                ;  Command gpsLongitudeHundredths[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsLongitudeHundredths
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO SELF
                RETURN   
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
lbl_38:         MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_39
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_39
                ;  Precondition gps_storeCount == 0x01
                MOVLW    .1
                CPFSEQ   gps_storeCount, A
                GOTO     lbl_39
                ;  Command gpsLongitudeHundredths[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsLongitudeHundredths
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO gps_State_0010
                MOVLW    HIGH(step_gps_State_0010)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0010)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_39:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0010 step code.
;------------------------------------------------------------------------------
lbl_40:
                ; -- Start of transition --
                ;  Precondition gpsInput == '$'
step_gps_State_0010: MOVLW    .36
                CPFSEQ   gpsInput, A
                GOTO     lbl_41
                ;  Transition GOTO (Shared) dollar
                GOTO     enter_dollar
                ; -- Start of transition --
                ;  Precondition gpsInput == ','
lbl_41:         MOVLW    .44
                CPFSEQ   gpsInput, A
                GOTO     lbl_42
                ;  Transition GOTO gps_State_0011
                MOVLW    HIGH(step_gps_State_0011)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0011)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO SELF
lbl_42:         RETURN   

;------------------------------------------------------------------------------
; Node gps_State_0011 step code.
;------------------------------------------------------------------------------
lbl_43:
                ; -- Start of transition --
                ;  Precondition gpsInput == 'E'
step_gps_State_0011: MOVLW    .69
                CPFSEQ   gpsInput, A
                GOTO     lbl_44
                ;  Command gpsFlags:2 := true
                BSF      gpsFlags, 2, A
                ;  Transition GOTO gps_State_0012
                MOVLW    HIGH(step_gps_State_0012)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0012)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Precondition gpsInput == 'W'
lbl_44:         MOVLW    .87
                CPFSEQ   gpsInput, A
                GOTO     lbl_45
                ;  Command gpsFlags:2 := false
                BCF      gpsFlags, 2, A
                ;  Transition GOTO gps_State_0012
                MOVLW    HIGH(step_gps_State_0012)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0012)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_45:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0012 step code.
;------------------------------------------------------------------------------
lbl_46:
                ; -- Start of transition --
                ;  Precondition gpsInput == ','
step_gps_State_0012: MOVLW    .44
                CPFSEQ   gpsInput, A
                GOTO     lbl_47
                ;  Return from subroutine
                CLRF     PCLATU, A
                MOVFF    (_subReturn + .1), PCLATH
                MOVF     _subReturn, W, A
                MOVWF    PCL, A
                ;  Transition GOTO (Shared) root
                GOTO     enter_root
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_47:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node readGpsTime step code.
;------------------------------------------------------------------------------
lbl_48:
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
step_readGpsTime: MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_49
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_49
                ;  Precondition gps_storeCount <= 0x04
                MOVLW    .5
                CPFSLT   gps_storeCount, A
                GOTO     lbl_49
                ;  Command gpsTime[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsTime
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO SELF
                RETURN   
                ; -- Start of transition --
                ;  Precondition gpsInput >= '0'
lbl_49:         MOVLW    .47
                CPFSGT   gpsInput, A
                GOTO     lbl_50
                ;  Precondition gpsInput <= '9'
                MOVLW    .58
                CPFSLT   gpsInput, A
                GOTO     lbl_50
                ;  Precondition gps_storeCount == 0x05
                MOVLW    .5
                CPFSEQ   gps_storeCount, A
                GOTO     lbl_50
                ;  Command gpsTime[gps_storeCount] := gpsInput
                LFSR     FSR0, gpsTime
                MOVF     gps_storeCount, W, A
                MOVFF    gpsInput, PLUSW0
                ;  Command gps_storeCount++
                INCF     gps_storeCount, F, A
                ;  Transition GOTO gps_State_0000
                MOVLW    HIGH(step_gps_State_0000)
                MOVWF    (_statePtr + .1), A
                MOVLW    LOW(step_gps_State_0000)
                MOVWF    _statePtr, A
                RETURN   
                ; -- Start of transition --
                ;  Transition GOTO (Shared) root
lbl_50:         GOTO     enter_root

;------------------------------------------------------------------------------
; Node gps_State_0000 step code.
;------------------------------------------------------------------------------
lbl_51:
                ; -- Start of transition --
                ;  Precondition gpsInput == '$'
step_gps_State_0000: MOVLW    .36
                CPFSEQ   gpsInput, A
                GOTO     lbl_52
                ;  Transition GOTO (Shared) dollar
                GOTO     enter_dollar
                ; -- Start of transition --
                ;  Precondition gpsInput == ','
lbl_52:         MOVLW    .44
                CPFSEQ   gpsInput, A
                GOTO     lbl_53
                ;  Return from subroutine
                CLRF     PCLATU, A
                MOVFF    (_subReturn + .1), PCLATH
                MOVF     _subReturn, W, A
                MOVWF    PCL, A
                ;  Transition GOTO (Shared) root
                GOTO     enter_root
                ; -- Start of transition --
                ;  Transition GOTO SELF
lbl_53:         RETURN   

              END
